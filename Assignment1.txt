
1. Write a SQL statement to create a simple table countries including columns country_id, country_name and region_id which already exist.

assignment1=# create table countries("country_id" integer, "country_name" char(20), "region_id" varchar(30));
CREATE TABLE
assignment1=# create table if not exists countries(country_id integer primary key, country_name char(20),region_id varchar(30));
NOTICE:  relation "countries" already exists, skipping
CREATE TABLE
assignment1=# \d countries
                       Table "public.countries"
    Column    |         Type          | Collation | Nullable | Default
--------------+-----------------------+-----------+----------+---------
 country_id   | integer               |           | not null |
 country_name | character(20)         |           |          |
 region_id    | character varying(30) |           |          |
Indexes:
    "countries_pkey" PRIMARY KEY, btree (country_id)



2. Write a SQL statement to create a simple table countries including columns country_id,country_name and region_id.


assignment1=# create table countries("country_id" integer primary key,
 "country_name" char(20),
 "region_id" varchar(30));
 CREATE TABLE

3.Write a SQL statement to create the structure of a table dup_countries similar to countries.


assignment1=# create table dup_countries as select *from countries;
SELECT 0
assignment1=# \d
             List of relations
 Schema |     Name      | Type  |  Owner
--------+---------------+-------+----------
 public | countries     | table | postgres
 public | dup_countries | table | postgres
(2 rows)




4. Write a SQL statement to create a duplicate copy of countries table including structure and data by name dup_countries.


assignment1=# create table dup_countries as table countries select*from dup2_countries;
 country_id |     country_name     | region_id
------------+----------------------+-----------
          1 | INDIA                | 01
          2 | USA                  | 02
          3 | CHINA                | 03
(3 rows)

5. Write a SQL statement to create a table named countries, including country_id, country_name and region_id and make sure that no duplicate data against column country_id will be allowed at the time of insertion.
Your work
Assigned

assignment1=# create table if not exists countries2(country_id integer primary key,country_name char(20),region_id serial);
CREATE TABLE
assignment1=# \d countries2
                                      Table "public.countries2"
    Column    |     Type      | Collation | Nullable |                    Default
--------------+---------------+-----------+----------+-----------------------------------------------
 country_id   | integer       |           | not null |
 country_name | character(20) |           |          |
 region_id    | integer       |           | not null | nextval('countries2_region_id_seq'::regclass)
Indexes:
    "countries2_pkey" PRIMARY KEY, btree (country_id)


dbms assignment1.txt
Displaying dbms assignment1.txt.